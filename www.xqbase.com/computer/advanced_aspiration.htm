<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=gb_2312-80">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>高级搜索方法――期望窗口</title>
</head>

<body background="../background.gif">

<dl>
    <div align="center"><center>
    <dt><font size="3">《对弈程序基本技术》专题</font>
    </dt>
    </center></div><div align="center"><center>
    <dt>　 </dt>
    </center></div><div align="center"><center>
    <dt><font size="6" face="隶书">期望窗口</font></dt>
    </center></div><div align="center"><center>
    <dt>　 </dt>
    </center></div><div align="center"><center>
    <dt><font face="Times New Roman">Bruce Moreland / </font>文</dt>
    </center></div>
    <dt>　</dt>
    <dt>　　期望窗口是对迭代加深的改进。迭代加深的最简单的实现方法是这样的：</dt>
    <dd>　</dd>
    <dd>for (depth = 1; ; depth ++) {</dd>
    <dd>　val = AlphaBeta(depth, -INFINITY, INFINITY);</dd>
    <dd>　if (TimedOut()) {</dd>
    <dd>　　break;</dd>
    <dd>　}</dd>
    <dd>}</dd>
    <dd>　</dd>
    <dt>　　这里调用了一个“窗口”为正负无穷大的<font
        face="Times New Roman">Alpha-Beta</font>搜索，以假定返回值可能是很大的正数或负数。</dt>
    <dt>　　假设下一次迭代时，搜索的值不会比上一次有太多的变动，那么就可以对以上的程序作改进，代码如下：</dt>
    <dd>　</dd>
    <dd>#define valWINDOW 50 // <font color="#0000FF">【译注：valWINDOW是窗口的半宽，在国际象棋中通常是半个兵的价值。】</font></dd>
    <dd>alpha = -INFINITY;</dd>
    <dd>beta = INFINITY;</dd>
    <dd>for (depth = 1; ; ) {</dd>
    <dd>　val = AlphaBeta(depth, alpha, beta);</dd>
    <dd>　if (TimedOut()) {</dd>
    <dd>　　break;</dd>
    <dd>　}</dd>
    <dd>　if ((val &lt;= alpha) || (val &gt;= beta)) {</dd>
    <dd>　　alpha = -INFINITY;</dd>
    <dd>　　beta = INFINITY;</dd>
    <dd>　　continue;</dd>
    <dd>　}</dd>
    <dd>　alpha = val - valWINDOW;</dd>
    <dd>　beta = val + valWINDOW;</dd>
    <dd>　depth ++;</dd>
    <dd>}</dd>
    <dt>　</dt>
    <dt>　　这个代码有点烂，如果可能的话你可以把“<font
        face="Times New Roman">continue</font>”前面的部分改一下试试。这个思想是用前一次<font
        face="Times New Roman">Alpha-Beta</font>迭代的值来作用到这次的迭代中。大多数情况下你得到的返回值会在<font
        face="Times New Roman">Alpha</font>和<font
        face="Times New Roman">Beta</font>之间。如果没有，那么你可以尝试一个宽一些的窗口。</dt>
    <dt>　　我的重新搜索并不那么有效，但是我相信你可以做得更好。一个很明显的思想是，如果返回值大于或等于<font
        face="Times New Roman">Beta</font>，你就扩展<font
        face="Times New Roman">Beta</font>，如果返回值小于等于<font
        face="Times New Roman">Alpha</font>，你就扩展<font
        face="Times New Roman">Alpha</font>，而不是我所做的<font
        face="Times New Roman">Alpha</font>和<font
        face="Times New Roman">Beta</font>都扩展。</dt>
    <dt>　</dt>
    <dt><font size="5" face="楷体_GB2312"><strong>搜索不稳定性的问题</strong></font></dt>
    <dt>　</dt>
    <dt>　　这是你要小心搜索不稳定性的另一个地方。当我首次在我的国际象棋程序中加入期望窗口时，我设想如果返回值大于或等于<font
        face="Times New Roman">Beta</font>，那么重新搜索的结果就应该得到更大的值。完全错了，我的程序陷入了非常严重的故障！下面是它的代码：</dt>
    <dt>　</dt>
    <dd>alpha = -INFINITY;</dd>
    <dd>beta = INFINITY;</dd>
    <dd>for (depth = 1; ; ) {</dd>
    <dd>　val = AlphaBeta(depth, alpha, beta);</dd>
    <dd>　if (TimedOut()) {</dd>
    <dd>　　break;</dd>
    <dd>　}</dd>
    <dd>　if (val &lt;= alpha) { // 错！</dd>
    <dd>　　alpha = -INFINITY;</dd>
    <dd>　　beta = val + 1; 　// <font color="#0000FF">【这行没有就对了，但效率会低很多。】</font></dd>
    <dd>　　continue;</dd>
    <dd>　}</dd>
    <dd>　if (val &gt;= beta) {　// 错！</dd>
    <dd>　　beta = INFINITY;</dd>
    <dd>　　alpha = val - 1;</dd>
    <dd>　　continue;</dd>
    <dd>　}</dd>
    <dd>　alpha = val - valWINDOW;</dd>
    <dd>　beta = val + valWINDOW;</dd>
    <dd>　depth++;</dd>
    <dd>}</dd>
    <dt>　</dt>
    <dt>　　如果你能确认重新搜索会有结果，那么上面的代码会非常有效的。但是在我这里情况却是：</dt>
    <dt>　　<font face="Times New Roman">1. </font>搜索<font
        face="Times New Roman">(Alpha, Beta)</font>时高出边界；</dt>
    <dt>　　<font face="Times New Roman">2. </font>重新搜索<font
        face="Times New Roman">(Beta - 1, INFINITY)</font>时低出边界；</dt>
    <dt>　　<font face="Times New Roman">3. </font>重新搜索<font
        face="Times New Roman">(-INFINITY, Alpha + 1)</font>时高出边界；</dt>
    <dt>　　<font face="Times New Roman">4. </font>等等，等等……</dt>
    <dt>　　无论如何你必须避免发生这种情况。</dt>
    <dt>　</dt>
</dl>

<dl>
    <div align="center"><center>
    <dt>《对弈程序基本技术》专题 </dt>
    </center></div><div align="center"><center>
    <dt>　</dt>
    </center></div><div align="center"><center>
    <dt><font size="6" face="隶书">搜索的不稳定性</font></dt>
    </center></div><div align="center"><center>
    <dt>　</dt>
    </center></div><div align="center"><center>
    <dt><font face="Times New Roman">Bruce Moreland / </font>文</dt>
    </center></div><div align="center"><center>
    <dt>　</dt>
    </center></div>
    <dt><font size="5" face="楷体_GB2312"><strong>没有这个，生活会更有趣</strong></font></dt>
    <dt>　</dt>
    <dt>　　当你试图写很强或很完美的程序时，搜索的不稳定性就可能出现。有很多原因可以导致不稳定性，当我讨论搜索的诸多改进方法时，顺便讨论了它们是如何导致搜索不稳定的。其他我没有讨论的搜索技巧也必须考虑不稳定的可能。</dt>
    <dt>　　不稳定的搜索会返回无效的值，你用<font
        face="Times New Roman">(5, 25)</font>的<font
        face="Times New Roman">Alpha-Beta</font>窗口会高出边界，因此你用<font
        face="Times New Roman">(24, INFINITY)</font>重新搜索，却低出边界。这不应该发生，因为高出边界很明显说明返回值应该是<font
        face="Times New Roman">25</font>或者更高，那怎么又会低出边界呢？</dt>
    <dt>　　事实就是如此，很多工作可以让国际象棋程序运行得更快或更好，但是它们或许会做一些蠢事，在用不同的窗口做搜索时返回略微不同的值。如果你没有得到你所期望的值，那么你的程序可能会陷入故障，或者产生一个使你的程序走出昏着的错误。</dt>
    <dt>　　一些国际象棋的程序设计师没有把握好搜索不稳定性的思想，他们宁可不用非常好的搜索算法，以避免这种情况的发生，或者他们认为这样就能够避免。</dt>
    <dt>　　我希望有可能完全排除搜索的不稳定性，但是就目前使用的非常基本的技术而言，很存在问题。我想解决办法就是对故障作一些防御，而别去深究不稳定性的原因。</dt>
    <dt>　</dt>
    <dt>　　原文：<a
        href="http://www.seanet.com/~brucemo/topics/instability.htm"
        target="_blank"><font face="Times New Roman">http://www.seanet.com/~brucemo/topics/instability.htm</font></a></dt>
    <dt>　　译者：象棋百科全书网 <font
        face="Times New Roman">(</font><a
        href="mailto:webmaster@xqbase.com"><font
        face="Times New Roman">webmaster@xqbase.com</font></a><font
        face="Times New Roman">)</font></dt>
    <dt>　　类型：全译</dt>
</dl>

<dir>
    <li>上一篇　<a href="advanced_pvs.htm">高级搜索方法――主要变例搜索</a></li>
    <li>下一篇　<a href="evalue_intro1.htm">局面评估函数――简介<font
        face="Times New Roman">(</font>一<font
        face="Times New Roman">)</font></a></li>
    <li>返　回　<a href="../computer.htm">象棋百科全书――电脑象棋</a></li>
</dir>
<div align="center"><center>

<table border="0">
    <tr>
        <td><p align="center"><a
        href="http://www.xqbase.com/" target="_blank"><img
        src="../xqbase.gif" border="0" width="88"
        height="31"></a></p>
        </td>
    </tr>
    <tr>
        <td><a href="http://www.xqbase.com/"
        target="_blank"><font size="2" face="Arial"><strong>www.xqbase.com</strong></font></a></td>
    </tr>
</table>
</center></div>

<dl>
    <dt><font color="#0000FF">　　【译者研究认为，在用了后面要谈到的“主要变例搜索”以后，期望窗口就几乎没有作用了，因此很多程序都没有使用这个技术，尽管它的思想非常明显，看上去似乎可以起到好的效果。】</font></dt>
    <dt>　</dt>
    <dt>　　原文：<a
        href="http://www.seanet.com/~brucemo/topics/aspiration.htm"
        target="_blank"><font face="Times New Roman">http://www.seanet.com/~brucemo/topics/aspiration.htm</font></a></dt>
    <dt>　　译者：象棋百科全书网 <font
        face="Times New Roman">(</font><a
        href="mailto:webmaster@xqbase.com"><font
        face="Times New Roman">webmaster@xqbase.com</font></a><font
        face="Times New Roman">)</font></dt>
    <dt>　　类型：全译加译注</dt>
</dl>

<dir>
    <li>上一篇　<a href="advanced_nullmove.htm">高级搜索方法――空着裁剪</a></li>
    <li>下一篇　<a href="advanced_pvs.htm">高级搜索方法――主要变例搜索</a></li>
    <li>返　回　<a href="../computer.htm">象棋百科全书――电脑象棋</a></li>
</dir>
<div align="center"><center>

<table border="0">
    <tr>
        <td><p align="center"><a
        href="http://www.xqbase.com/" target="_blank"><img
        src="../xqbase.gif" border="0" width="88"
        height="31"></a></p>
        </td>
    </tr>
    <tr>
        <td><a href="http://www.xqbase.com/"
        target="_blank"><font size="2" face="Arial"><strong>www.xqbase.com</strong></font></a></td>
    </tr>
</table>
</center></div>
</body>
</html>
